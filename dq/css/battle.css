@charset "UTF-8";

.container2 {
  /* border: 1px solid red; */
  background: #000;
  width: 100%;
  height: 100vh;
  margin: auto;
  position: relative;
}

/* 戦闘画面全体のデザイン */
.battle_window {
  border: 1px solid white;
  /* background-color: blue; */
  color: white;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 95%;
  height: 95%;
}

/* キャラクター1 戦闘ステータス画面 */
.character1 {
border: 2px solid white;
border-radius: 10px;
width: 100px;
margin: 10px;
padding: 0.3em;
float: left;
}

/* キャラクター2 戦闘ステータス画面 */
.character2 {
border: 2px solid white;
border-radius: 10px;
/* background-color: rgba(255, 251, 0, 0.781); */
width: 100px;
margin: 10px;
padding: 0.3em;
float: left;
}

.field_container {
  /* border: 5px solid blue; */
  width: 100%;
  height: 50%;
  position: relative;
  overflow:hidden;
}

.effect_field {
  background-color: rgba(181, 61, 61, 0.9);
  position: absolute;
  width: 100%;
  height: 100vh;
  z-index: 2;
}

.enemy_field {
  /* border: 1px solid red; */
  position: absolute;
  width: 100%;
  height: 100%;
}

/* 戦闘フィールドに表示する敵のステータス */
.enemy_status {
  /* border: 1px solid yellow; */
  color: #FFF;
  -webkit-text-stroke: 1px #000;
  text-stroke: 1px #000;
  position: absolute;
  top: 20%;
  left: 50%;
  transform: translate(-50%,-50%);
  margin: 0 auto;
  padding: 20px;
  text-align: center;
  font-weight: bold;
  font-size: 18px;
  z-index: 2;
}

/* field_container内に表示する敵キャラの画像サイズ及び配置位置 */
.enemy-image {
/* border: 1px solid yellow; */
margin: 0 auto;
text-align: center;
width: 100%;
height: 30%;
position: absolute;
top: 50%;
left: 0;
right: 0;
bottom: 0;
animation: bound 1.0s infinite;
}
@keyframes bound { /* スライムを跳ねさせる */
  0%,100% { /* 開始と終わり */
    /* top: 0; */
    transform: translate(0%, 0%) scale(1); /* 開始と終わりの標準値 */
  }
  30% {
    /* top: -60%; */
    transform: translate(0%,-60%) scale(0.7,1.2); /* X軸(0.7)縮める Y軸(1.2)伸びる */
  }
  60% {
    transform: scale(1);
  }
  90% {
    /* top: 0; */
    transform: translate(0%,0%) scale(1.3,0.8);
  }
}

.enemy-image1-size {
  /* border: 1px solid yellow; */
  top: 80px;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100px;
  height: 100px;
  position: absolute;
}

.enemy-image2-size {
  /* border: 1px solid yellow; */
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 400px;
  height: 300px;
  position: absolute;
}

.enemy-image3-size {
  /* border: 1px solid yellow; */
  top: 61%;
  left: 49%;
  transform: translate(-50%, -50%);
  width: 400px;
  height: 300px;
  position: absolute;
}

.enemy-image4-size {
  /* border: 1px solid yellow; */
  top: 59%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: auto;
  height: 300px;
  position: absolute;
}

.shadow {
  position: absolute;
  top: 200px;
  bottom: 0;
  left: 0;
  right: 0;
  margin: auto;
  width: 41px;
  height: 3px;
  background: #000;
  border-radius: 50%;
  opacity: 1;
  filter: blur(3px);
  z-index: 3;
  animation: shadow-animation 1s infinite;
}
@keyframes shadow-animation {
  0%,100% {
  transform: scale(1);
  filter: blur(3px);
}

30% {
transform: scale(0.7,1.2);
filter: blur(3px);
}

60% {
transform: scale(1);
}

90% {
transform: scale(1.3,0.8);
filter: blur(2px);
}
}

.battle_field {
  /* border: 1px solid red; */
  background: url(../img/background/forest.jpg);
  width: 100%;
  height: 100%;
  overflow:hidden;
}

.battle_field2 {
  /* border: 1px solid red; */
  background: url(../img/background/castle_ruins.jpg);
  background-size: cover;
  width: 100%;
  height: 150%;
  bottom: -150px;
}

.battle_field3 {
  /* border: 1px solid red; */
  background: url(../img/background/crystar.png);
  background-size: cover;
  width: 100%;
  height: 150%;
  bottom: -150px;
}

.battle_field4 {
  /* border: 1px solid red; */
  background:#FFF;
  background-size: cover;
  width: 100%;
  height: 150%;
  bottom: -150px;
}

/* メニュー */
.battle_menu {
  border: 2px solid white;
  border-radius: 10px;
  width: 100px;
  margin: 10px;
  padding: 0.3em;
  float: left;
}

/* メッセージ */
.message_window {
  border: 2px solid white;
  border-radius: 10px;
  position: absolute;
  left: 15%;
  width: 70%;
  height: auto;
  margin: 10px auto;
  padding: 0.3em;
  float: left;
}

.clear {
  clear: both;
}

/* HP50%時 下記CSSで全体枠を黄色 */
.battle_window_yellow {
  border: 1px solid yellow;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 95%;
  height: 95%;
  color:yellow;
  position: absolute;
}
.character1_yellow {
  width: 100px;
  border: 2px solid yellow;
  border-radius: 10px;
  margin: 10px;
  padding: 0.3em;
  float: left;
}
.character2_yellow {
  width: 100px;
  border: 2px solid yellow;
  border-radius: 10px;
  margin: 10px;
  padding: 0.3em;
  float: left;
}
.battle_menu_yellow {
  width: 100px;
  border: 2px solid yellow;
  border-radius: 10px;
  margin-top: 10px;
  margin-left: 15px;
  padding: 0.3em;
  float: left;
}
.message_window_yellow {
  border: 2px solid yellow;
  border-radius: 10px;
  position: absolute;
  left: 15%;
  width: 70%;
  height: auto;
  margin: 10px auto;
  padding: 0.3em;
  float: left;
}

/* HP0%時 下記CSSで全体枠を赤色 */
.battle_window_red {
  border: 1px solid red;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 95%;
  height: 95%;
  color: red;
  position: absolute;
}
.character1_red {
  width: 100px;
  border: 2px solid red;
  border-radius: 10px;
  margin: 10px;
  padding: 0.3em;
  float: left;
}
.character2_red {
  width: 100px;
  border: 2px solid red;
  border-radius: 10px;
  margin: 10px;
  padding: 0.3em;
  float: left;
}
.battle_menu_red {
  width: 100px;
  border: 2px solid red;
  border-radius: 10px;
  margin-top: 10px;
  margin-left: 15px;
  padding: 0.3em;
  float: left;
}
.message_window_red {
  border: 2px solid red;
  border-radius: 10px;
  position: absolute;
  left: 15%;
  width: 70%;
  height: auto;
  margin: 10px auto;
  padding: 0.3em;
  float: left;
}


.shake {
  animation: shake 0.01s infinite;
}
@keyframes shake {
  0%   {transform: translate(-50%, -50%) rotateZ(0deg)}
  25%  {transform: translate(-51%, -51%) rotateZ(1deg)}
  50%  {transform: translate(-50%, -51%) rotateZ(0deg)}
  75%  {transform: translate(-51%, -50%) rotateZ(-1deg)}
  100% {transform: translate(-50%, -50%) rotateZ(0deg)}
}

.enemy_receive_damage {
  -webkit-animation: blink 0.05s ease-in-out infinite alternate;
  animation: blink 0.05s ease-in-out infinite alternate;
}
@-webkit-keyframes blink {
  0%   {opacity: 0;}
  100% {opacity: 1;}
}
@keyframes blink {
  0%   {opacity: 0;}
  100% {opacity: 1;}
}

.effect_freezing_waves {
  /* border: 1px solid yellow; */
  background-image: url(../img/effect/freezing_waves.gif);
  margin: auto;
  background-size: cover;
  width: 100%;
  height: 220%;
  opacity: 1;
  top: 20%;
  left: 50%;
  position: absolute;
  transform: translate(-50%,-50%);
  animation: img-wrap 5.0s infinite;
  z-index: 1;
}
@keyframes img-wrap {
  0% {
    opacity: 0.3;
    clip-path: circle(0 at 50% 50%);
    -webkit-clip-path: circle(0 at 50% 70%);
  }
  100% {
    opacity: 0;
    clip-path: circle(100% at 50% 50%);
    -webkit-clip-path: circle(100% at 50% 70%);
  }
}

.effect_panta_rhei_cutin {
  /* border: 5px solid yellow; */
  background-image: url(../img/effect/panta_rhei_cutin.gif);
  box-shadow:
  0px 10px 10px rgb(255, 255, 180) inset,
  0px -10px 10px rgb(255, 255, 180) inset;
  background-position: center;
  margin: auto;
  /* background-size: cover; */
  text-align: center;
  background-repeat: no-repeat;
  width: 100%;
  height: 60%;
  opacity: 1;
  top: 50%;
  left: 50%;
  position: absolute;
  transform: translate(-50%,-50%);
  animation: cutin 2s infinite;
  z-index: 1;
}  
@keyframes cutin {
  0% {
    opacity: 0;
    transform: translate(-150%,-50%)
  }
  10% {
    opacity: 1;
    transform: translate(-50%,-50%)
  }  
  100% {
    opacity: 0;
    transform: translate(-50%,-50%)
  }
}

